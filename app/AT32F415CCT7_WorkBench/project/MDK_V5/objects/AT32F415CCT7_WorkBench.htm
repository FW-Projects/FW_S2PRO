<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\AT32F415CCT7_WorkBench.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\AT32F415CCT7_WorkBench.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Fri Oct 24 15:11:47 2025
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
disp_task &rArr; LCD_VISION &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[9]">SysTick_Handler</a>
 <LI><a href="#[ec]">__ensure_systick_wrapper</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[45]">$Super$$SysTick_Handler</a> from lto-llvm-0e30cf.o(.text.SysTick_Handler) referenced from systick_wrapper_gnu.o(.text)
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-0e30cf.o(.text.BusFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[20]">CAN1_SE_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3e]">CMP1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3f]">CMP2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[f]">CRM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[40]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-0e30cf.o(.text.DebugMon_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[33]">ERTCAlarm_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[d]">ERTC_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[10]">EXINT0_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[32]">EXINT15_10_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[11]">EXINT1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[12]">EXINT2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[13]">EXINT3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[14]">EXINT4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[21]">EXINT9_5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[5d]">EventRecorderEnable</a> from lto-llvm-0e30cf.o(.text.EventRecorderEnable) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-0e30cf.o(.text.HardFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[29]">I2C1_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2b]">I2C2_EVT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[49]">LCD_DrawLine</a> from lto-llvm-0e30cf.o(.text.LCD_DrawLine) referenced from lto-llvm-0e30cf.o(.text.disp_task)
 <LI><a href="#[4a]">LCD_ShowString</a> from lto-llvm-0e30cf.o(.text.LCD_ShowString) referenced from lto-llvm-0e30cf.o(.text.disp_task)
 <LI><a href="#[47]">LCD_WR_DATA</a> from lto-llvm-0e30cf.o(.text.LCD_WR_DATA) referenced from lto-llvm-0e30cf.o(.text.LCD_Address_Set)
 <LI><a href="#[46]">LCD_WR_REG</a> from lto-llvm-0e30cf.o(.text.LCD_WR_REG) referenced from lto-llvm-0e30cf.o(.text.LCD_Address_Set)
 <LI><a href="#[46]">LCD_WR_REG</a> from lto-llvm-0e30cf.o(.text.LCD_WR_REG) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[5c]">LCD_Write_Bus</a> from lto-llvm-0e30cf.o(.text.LCD_Write_Bus) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-0e30cf.o(.text.MemManage_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-0e30cf.o(.text.NMI_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[3d]">OTGFS1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[34]">OTGFS1_WKUP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-0e30cf.o(.text.PendSV_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[35]">SDIO1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-0e30cf.o(.text.SVC_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from systick_wrapper_gnu.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[42]">SystemInit</a> from lto-llvm-0e30cf.o(.text.SystemInit) referenced from startup_at32f415.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[22]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[25]">TMR1_CH_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[23]">TMR1_OVF_TMR10_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[24]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[26]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[27]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[28]">TMR4_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[36]">TMR5_GLOBAL_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[4b]">TranferPicturetoTFT_LCD</a> from lto-llvm-0e30cf.o(.text.TranferPicturetoTFT_LCD) referenced from lto-llvm-0e30cf.o(.text.disp_task)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-0e30cf.o(.text.USART1_IRQHandler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-0e30cf.o(.text.UsageFault_Handler) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f415.o(.text) referenced from startup_at32f415.o(RESET)
 <LI><a href="#[43]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f415.o(.text)
 <LI><a href="#[5f]">__perf_counter_init</a> from lto-llvm-0e30cf.o(.text.__perf_counter_init) referenced from lto-llvm-0e30cf.o(.init_array)
 <LI><a href="#[58]">disp_task</a> from lto-llvm-0e30cf.o(.text.disp_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[55]">feed_dog_task</a> from lto-llvm-0e30cf.o(.text.feed_dog_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[4c]">flash_halfword_program</a> from lto-llvm-0e30cf.o(.text.flash_halfword_program) referenced from lto-llvm-0e30cf.o(.text.flash_task)
 <LI><a href="#[4d]">flash_read_halfword</a> from lto-llvm-0e30cf.o(.text.flash_read_halfword) referenced from lto-llvm-0e30cf.o(.text.get_data_from_b)
 <LI><a href="#[57]">flash_task</a> from lto-llvm-0e30cf.o(.text.flash_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[4e]">gpio_init</a> from lto-llvm-0e30cf.o(.text.gpio_init) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[56]">iap_task</a> from lto-llvm-0e30cf.o(.text.iap_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[48]">key_set_timing_simple</a> from lto-llvm-0e30cf.o(.text.key_set_timing_simple) referenced from lto-llvm-0e30cf.o(.text.SysTick_Handler)
 <LI><a href="#[41]">main</a> from lto-llvm-0e30cf.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5a]">output_task</a> from lto-llvm-0e30cf.o(.text.output_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[59]">pc_task</a> from lto-llvm-0e30cf.o(.text.pc_task) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[44]">perfc_port_insert_to_system_timer_insert_ovf_handler</a> from lto-llvm-0e30cf.o(.text.perfc_port_insert_to_system_timer_insert_ovf_handler) referenced from systick_wrapper_gnu.o(.text)
 <LI><a href="#[5e]">spi_byte_write</a> from lto-llvm-0e30cf.o(.text.spi_byte_write) referenced from lto-llvm-0e30cf.o(.text.spiflash_read)
 <LI><a href="#[52]">tmt_create</a> from lto-llvm-0e30cf.o(.text.tmt_create) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[51]">tmt_delete</a> from lto-llvm-0e30cf.o(.text.tmt_delete) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[54]">tmt_run</a> from lto-llvm-0e30cf.o(.text.tmt_run) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[4f]">tmt_run_ctrl</a> from lto-llvm-0e30cf.o(.text.tmt_run_ctrl) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[50]">tmt_time_ctrl</a> from lto-llvm-0e30cf.o(.text.tmt_time_ctrl) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[53]">tmt_update_tick</a> from lto-llvm-0e30cf.o(.text.tmt_update_tick) referenced from lto-llvm-0e30cf.o(.text.main)
 <LI><a href="#[5b]">wk_delay_ms</a> from lto-llvm-0e30cf.o(.text.wk_delay_ms) referenced from lto-llvm-0e30cf.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[61]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[63]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[e8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[e9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ea]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[eb]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ERTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ERTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTGFS1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f415.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, systick_wrapper_gnu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>__ensure_systick_wrapper</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, systick_wrapper_gnu.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perfc_port_insert_to_system_timer_insert_ovf_handler
</UL>

<P><STRONG><a name="[ed]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[62]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ee]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ef]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[f0]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[f1]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[69]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[60]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_fcmpeq</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpeq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[74]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[73]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>$Super$$SysTick_Handler</STRONG> (Thumb, 5012 bytes, Stack size 40 bytes, lto-llvm-0e30cf.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = $Super$$SysTick_Handler &rArr; PID_Position_Calc &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_59
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_58
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_49
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_off
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_on
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_ticks
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systick_wrapper_gnu.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>SystemInit</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lto-llvm-0e30cf.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART1_IRQHandler &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f415.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>main</STRONG> (Thumb, 3008 bytes, Stack size 32 bytes, lto-llvm-0e30cf.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; LCD_Fill &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRecordItem
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_ticks
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_60
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[44]"></a>perfc_port_insert_to_system_timer_insert_ovf_handler</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, lto-llvm-0e30cf.o(.text.perfc_port_insert_to_system_timer_insert_ovf_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = perfc_port_insert_to_system_timer_insert_ovf_handler &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systick_wrapper_gnu.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[f4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[f5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[da]"></a>OUTLINED_FUNCTION_60</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_60))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>crm_clocks_freq_get</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, lto-llvm-0e30cf.o(.text.crm_clocks_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>dma_reset</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.dma_reset))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>dma_init</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.dma_init))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>spi_init</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>adc_ordinary_channel_set</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.adc_ordinary_channel_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_ordinary_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_adcval
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>gpio_init</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, lto-llvm-0e30cf.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[dd]"></a>filter_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.filter_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>queue_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.queue_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>LCD_Fill</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, lto-llvm-0e30cf.o(.text.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_Fill &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Address_Set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_14 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>get_system_ticks</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.get_system_ticks))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_system_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__perf_counter_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventGetTS
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>EventGetTS</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.EventGetTS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventGetTS &rArr; get_system_ticks
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>EventRecordItem</STRONG> (Thumb, 228 bytes, Stack size 36 bytes, lto-llvm-0e30cf.o(.text.EventRecordItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EventRecordItem
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>OUTLINED_FUNCTION_44</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_44))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_44 &rArr; get_system_ticks
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_ticks
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>tmt_run_ctrl</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.tmt_run_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_run_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[50]"></a>tmt_time_ctrl</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.tmt_time_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_time_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[51]"></a>tmt_delete</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.tmt_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[52]"></a>tmt_create</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.tmt_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[53]"></a>tmt_update_tick</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.tmt_update_tick))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[54]"></a>tmt_run</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.tmt_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[55]"></a>feed_dog_task</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.feed_dog_task))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[56]"></a>iap_task</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.iap_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = iap_task &rArr; flash_word_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[57]"></a>flash_task</STRONG> (Thumb, 1152 bytes, Stack size 48 bytes, lto-llvm-0e30cf.o(.text.flash_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = flash_task &rArr; data_check_len &rArr; flash_read_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_halfword
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[58]"></a>disp_task</STRONG> (Thumb, 4232 bytes, Stack size 48 bytes, lto-llvm-0e30cf.o(.text.disp_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = disp_task &rArr; LCD_VISION &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_VISION
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIntNum
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltage_to_y
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[59]"></a>pc_task</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, lto-llvm-0e30cf.o(.text.pc_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pc_task &rArr; queue_write
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_read
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queue_write
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_block_calculate
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[5a]"></a>output_task</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lto-llvm-0e30cf.o(.text.output_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = output_task
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[5b]"></a>wk_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.wk_delay_ms))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[46]"></a>LCD_WR_REG</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_WR_REG &rArr; LCD_Write_Bus
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Bus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-0e30cf.o(.text.main)
<LI> lto-llvm-0e30cf.o(.text.LCD_Address_Set)
</UL>
<P><STRONG><a name="[5c]"></a>LCD_Write_Bus</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.LCD_Write_Bus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Write_Bus
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[5d]"></a>EventRecorderEnable</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lto-llvm-0e30cf.o(.text.EventRecorderEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventRecorderEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.main)
</UL>
<P><STRONG><a name="[ce]"></a>flash_sector_erase</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_sector_erase &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[d2]"></a>flash_word_program</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.flash_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_word_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[d9]"></a>nvic_system_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.nvic_system_reset))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[cf]"></a>OUTLINED_FUNCTION_56</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_56))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[94]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[4c]"></a>flash_halfword_program</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.flash_halfword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_halfword_program &rArr; flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.flash_task)
</UL>
<P><STRONG><a name="[be]"></a>data_check_len</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lto-llvm-0e30cf.o(.text.data_check_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = data_check_len &rArr; flash_read_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[4d]"></a>flash_read_halfword</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-0e30cf.o(.text.flash_read_halfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_read_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.get_data_from_b)
</UL>
<P><STRONG><a name="[d0]"></a>get_data_from_a</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.get_data_from_a))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_data_from_a &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_39
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[d1]"></a>get_data_from_b</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.get_data_from_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_data_from_b &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_39
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[8b]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[98]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_task
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[bf]"></a>voltage_to_y</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.voltage_to_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = voltage_to_y &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[49]"></a>LCD_DrawLine</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, lto-llvm-0e30cf.o(.text.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_DrawLine &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Address_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.disp_task)
</UL>
<P><STRONG><a name="[c0]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[9b]"></a>OUTLINED_FUNCTION_34</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_34))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_34 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[95]"></a>OUTLINED_FUNCTION_28</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_28))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_28 &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[9f]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a6]"></a>OUTLINED_FUNCTION_55</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_55))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_55 &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a0]"></a>OUTLINED_FUNCTION_43</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_43))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_43 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c1]"></a>OUTLINED_FUNCTION_52</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_52))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c2]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[b0]"></a>OUTLINED_FUNCTION_57</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_57))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[9d]"></a>OUTLINED_FUNCTION_35</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_35))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[b9]"></a>OUTLINED_FUNCTION_36</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_36))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[90]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c3]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[82]"></a>LCD_ShowIntNum</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, lto-llvm-0e30cf.o(.text.LCD_ShowIntNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LCD_ShowIntNum &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[4b]"></a>TranferPicturetoTFT_LCD</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lto-llvm-0e30cf.o(.text.TranferPicturetoTFT_LCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.disp_task)
</UL>
<P><STRONG><a name="[8d]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[96]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_3 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a3]"></a>OUTLINED_FUNCTION_46</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_46))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = OUTLINED_FUNCTION_46 &rArr; LCD_VISION &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_VISION
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[8e]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_20 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a4]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_5 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c4]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[84]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[86]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_13 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[83]"></a>LCD_VISION</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, lto-llvm-0e30cf.o(.text.LCD_VISION))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LCD_VISION &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[8f]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_21 &rArr; TranferPicturetoTFT_LCD &rArr; spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c5]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[a5]"></a>OUTLINED_FUNCTION_53</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_53))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_53 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[4a]"></a>LCD_ShowString</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, lto-llvm-0e30cf.o(.text.LCD_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LCD_ShowString &rArr; LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.disp_task)
</UL>
<P><STRONG><a name="[c6]"></a>OUTLINED_FUNCTION_51</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_51))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[93]"></a>OUTLINED_FUNCTION_26</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_26))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OUTLINED_FUNCTION_26 &rArr; __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c7]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_23))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[c8]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[92]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Position_Calc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[80]"></a>LCD_ShowChar</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, lto-llvm-0e30cf.o(.text.LCD_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_ShowChar &rArr; OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_VISION
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowIntNum
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task
</UL>

<P><STRONG><a name="[e4]"></a>convert_data</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.convert_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = convert_data
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_task
</UL>

<P><STRONG><a name="[e5]"></a>crc_block_calculate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.crc_block_calculate))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_task
</UL>

<P><STRONG><a name="[bc]"></a>queue_write</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.queue_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = queue_write
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_task
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>queue_read</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.queue_read))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_task
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[9a]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_task
</UL>

<P><STRONG><a name="[aa]"></a>beep_on</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.beep_on))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[ab]"></a>beep_off</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.beep_off))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[ac]"></a>OUTLINED_FUNCTION_50</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_50))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[ad]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[ae]"></a>OUTLINED_FUNCTION_49</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_49))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[af]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b1]"></a>OUTLINED_FUNCTION_48</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_48))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b2]"></a>OUTLINED_FUNCTION_58</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_58))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b3]"></a>OUTLINED_FUNCTION_59</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_59))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[a7]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_8 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b4]"></a>get_adcval</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.get_adcval))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_adcval &rArr; adc_ordinary_channel_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[97]"></a>OUTLINED_FUNCTION_31</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_31))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_31 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[a8]"></a>PID_Position_Calc</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, lto-llvm-0e30cf.o(.text.PID_Position_Calc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = PID_Position_Calc &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[88]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b6]"></a>OUTLINED_FUNCTION_54</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_54))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[b7]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[8a]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_17 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[48]"></a>key_set_timing_simple</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.key_set_timing_simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_set_timing_simple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.SysTick_Handler)
</UL>
<P><STRONG><a name="[b8]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[85]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_11 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[ba]"></a>OUTLINED_FUNCTION_37</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_37))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$SysTick_Handler
</UL>

<P><STRONG><a name="[cd]"></a>flash_operation_status_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.flash_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[cb]"></a>flash_operation_wait_for</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.flash_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>

<P><STRONG><a name="[cc]"></a>OUTLINED_FUNCTION_47</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_47))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_word_program
</UL>

<P><STRONG><a name="[e3]"></a>__NVIC_SystemReset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_system_reset
</UL>

<P><STRONG><a name="[d4]"></a>OUTLINED_FUNCTION_42</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_42))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
</UL>

<P><STRONG><a name="[d5]"></a>OUTLINED_FUNCTION_41</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_41))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
</UL>

<P><STRONG><a name="[d6]"></a>OUTLINED_FUNCTION_40</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_40))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
</UL>

<P><STRONG><a name="[d7]"></a>OUTLINED_FUNCTION_39</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_39))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
</UL>

<P><STRONG><a name="[d8]"></a>OUTLINED_FUNCTION_38</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_38))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_b
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_a
</UL>

<P><STRONG><a name="[bb]"></a>spiflash_read</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, lto-llvm-0e30cf.o(.text.spiflash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spiflash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>

<P><STRONG><a name="[5e]"></a>spi_byte_write</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.spi_byte_write))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.spiflash_read)
</UL>
<P><STRONG><a name="[7c]"></a>LCD_Address_Set</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, lto-llvm-0e30cf.o(.text.LCD_Address_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Address_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>

<P><STRONG><a name="[47]"></a>LCD_WR_DATA</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-0e30cf.o(.text.LCD_WR_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_WR_DATA &rArr; LCD_Write_Bus
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write_Bus
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.text.LCD_Address_Set)
</UL>
<P><STRONG><a name="[81]"></a>OUTLINED_FUNCTION_29</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_29))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_29 &rArr; LCD_Address_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Address_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>

<P><STRONG><a name="[a2]"></a>OUTLINED_FUNCTION_45</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-0e30cf.o(.text.OUTLINED_FUNCTION_45))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_45 &rArr; LCD_WR_DATA &rArr; LCD_Write_Bus
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranferPicturetoTFT_LCD
</UL>

<P><STRONG><a name="[5f]"></a>__perf_counter_init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lto-llvm-0e30cf.o(.text.__perf_counter_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __perf_counter_init &rArr; get_system_ticks
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_ticks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-0e30cf.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
